// testFloat2.cpp : 定义控制台应用程序的入口点。
//

#include "stdafx.h"
#include <bitset>
#include <iostream>
using namespace std;

union MyUnion
{
    int n;
    float f;

};

int _tmain(int argc, _TCHAR* argv[])
{
    bitset<32> b(12);

    cout << b << endl;

    MyUnion m;
    m.f = 5.2f;

    bitset<32> bt(m.n);
    cout << bt << endl;

    MyUnion m0;
    m0.f = 5.5f;

    bitset<32> bt0(m0.n);
    cout << bt0 << endl;


    MyUnion m2;
    m2.n = 0;
    for (int i = 0; i < 33; i++)
    {
        cout << m2.f << endl;
        ++m2.n;
    }


	return 0;
}

// 实际上float所表示的小数是跳跃的，同样的空间表示更大的范围必然会造成精度损失
// 5.5这个数字可以正常表示，没有精度损失
// 5.2这个数就没办法精确表示，因为0.2，表示成二进制是0.0011001100110011...无限循环
/*
00000000000000000000000000001100
01000000101001100110011001100110
01000000101100000000000000000000
0
1.4013e-045
2.8026e-045
4.2039e-045
5.60519e-045
7.00649e-045
8.40779e-045
9.80909e-045
1.12104e-044
1.26117e-044
1.4013e-044
1.54143e-044
1.68156e-044
1.82169e-044
1.96182e-044
2.10195e-044
2.24208e-044
2.38221e-044
2.52234e-044
2.66247e-044
2.8026e-044
2.94273e-044
3.08286e-044
3.22299e-044
3.36312e-044
3.50325e-044
3.64338e-044
3.78351e-044
3.92364e-044
4.06377e-044
4.2039e-044
4.34403e-044
4.48416e-044

*/
